{"version":3,"sources":["Card.js","CardList.js","SearchBox.js","Scroll.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","id","name","email","CardList","robots","map","user","i","SearchBox","search","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","filteredRobots","this","filter","toLowerCase","includes","console","log","length","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAeeA,EAbF,SAACC,GACZ,OACE,sBAAKC,UAAU,yCAAf,UACE,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAAMI,GAAhC,cACvB,gCACI,6BAAKJ,EAAMK,OACX,4BAAIL,EAAMM,eCcHC,EAnBE,SAAC,GAAa,IAAZC,EAAW,EAAXA,OAIlB,OACA,8BACGA,EAAOC,KAAI,SAACC,EAAMC,GACrB,OAAO,cAAC,EAAD,CAEPP,GAAKI,EAAOG,GAAGP,GACfC,KAAMG,EAAOG,GAAGN,KAChBC,MAAOE,EAAOG,GAAGL,OAHXK,SCKQC,EAdG,SAAC,GAA0B,EAAzBC,OAA0B,IAAlBC,EAAiB,EAAjBA,aAC3B,OACC,qBAAKb,UAAU,MAAf,SACA,uBACAA,UAAY,mCACZc,KAAK,SACLC,YAAa,SACbC,SAAUH,OCGGI,EATA,SAAClB,GACf,OACC,qBAAKmB,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAO,SAApE,SACCtB,EAAMuB,YCqDMC,E,kDA/Cd,aAAc,IAAD,8BACZ,gBAcDC,eAAgB,SAACC,GAChB,EAAKC,SAAS,CAACd,OAAQa,EAAME,OAAOC,SAdpC,EAAKC,MAAQ,CACZtB,OAAQ,GACRK,OAAQ,IAJG,E,qDAOb,WAAoB,IAAD,OAClBkB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAI,EAAKR,SAAS,CAACnB,OAAQ2B,S,oBAWvC,WAAS,IAAD,OACDC,EAAiBC,KAAKP,MAAMtB,OAAO8B,QAAO,SAAA9B,GAC/C,OAAOA,EAAOH,KAAKkC,cAAcC,SAAS,EAAKV,MAAMjB,OAAO0B,kBAI7D,OAFAE,QAAQC,IAAIN,GAEqB,IAA7BC,KAAKP,MAAMtB,OAAOmC,OACf,oBAAI1C,UAAU,OAAd,qBAIP,sBAAKA,UAAU,KAAf,UACA,oBAAIA,UAAU,OAAd,0BAIA,cAAC,EAAD,CAAWa,aAAcuB,KAAKZ,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,CAAUjB,OAAQ4B,a,GAxCFQ,IAAMC,WCCTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACA,cAAC,EAAD,MAEAC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3bc1f514.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = (props) => {\r\n  return(\r\n    <div className=\"tc bg-light-green dib br3 pa3 ma2 grow\">\r\n      <img alt='robots' src={`https://robohash.org/${props.id}?200x200`}/>\r\n    <div>\r\n        <h2>{props.name}</h2>\r\n        <p>{props.email}</p>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) =>{\r\n\r\n\r\n\r\n\treturn (\r\n\t<div>\r\n  \t{robots.map((user, i) => {\r\n\treturn <Card  \r\n\tkey= {i} \r\n\tid ={robots[i].id} \r\n\tname={robots[i].name} \r\n\temail={robots[i].email}\r\n\t/>})\r\n\t}\r\n\t\r\n    </div>\r\n\t\t);\r\n}\r\n\r\nexport default CardList","import React from 'react';\r\n\r\nconst SearchBox = ({search, searchChange}) =>{\r\n\treturn (\r\n\t\t<div className='pa2'>\r\n\t\t<input \r\n\t\tclassName = 'pa3 ba b--green bg-lightest-blue'\r\n\t\ttype='search' \r\n\t\tplaceholder ='search'\r\n\t\tonChange={searchChange}\r\n\t\t/>\r\n\t\t</div>\r\n\r\n\t\t);\r\n\r\n}\r\nexport default SearchBox;\r\n\r\n","import React from 'react'\r\n\r\n// Children Scroll can use its chidren to render its children\r\nconst Scroll = (props) =>{\r\n\treturn(\r\n\t\t<div style={{overflowY: 'scroll', border: '6px solid black', height:'800px'}}>\r\n\t\t{props.children}\r\n\t\t</div>\r\n\t\t);\r\n\t\r\n};\r\n\r\nexport default Scroll","import React from 'react';\r\nimport CardList from './CardList';\r\nimport SearchBox from './SearchBox';\r\nimport {robots} from './robots';\r\nimport Scroll from './Scroll'\r\n\r\n\r\n\r\n// STATE IS AN OBJECT THAT DESCRIBES YOUR APPLICATION \r\n// WHICH IN THIS IS THE ROBOT AND YOU CAN CHANGE THE VALUE OF IT PROPS ARE SIMPLY THINGS THAT COME OUT OF STATE\r\n\r\nclass App extends React.Component {\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\trobots: [],\r\n\t\t\tsearch: ''\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount(){\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(response=>response.json())\r\n\t\t.then(users => this.setState({robots: users}));\r\n\t}\r\n\r\n\r\n\r\n\tonSearchChange= (event) => {\r\n\t\tthis.setState({search: event.target.value})\r\n\t\t\r\n\t}\r\n\r\n\r\n\trender(){\r\n\t\tconst filteredRobots = this.state.robots.filter(robots =>{\r\n\t\t\treturn robots.name.toLowerCase().includes(this.state.search.toLowerCase());\r\n\t\t})\r\n\t\tconsole.log(filteredRobots);\r\n\r\n\t\tif (this.state.robots.length === 0){\r\n\t\treturn <h1 className='robo'>Loading</h1>\r\n\t\t}else{\r\n\t\t\r\n\t\treturn (\r\n\t\t<div className='tc'>\r\n\t\t<h1 className='robo'>\r\n\t\tROBO FRIENDS\r\n\t\t</h1>\r\n\t\r\n\t\t<SearchBox searchChange={this.onSearchChange}/>\r\n\t\t<Scroll>\r\n\t\t<CardList robots={filteredRobots}/>\r\n\t\t</Scroll>\r\n\t\t</div>\r\n\t\t\t);\r\n\t}}\r\n\r\n}\r\n\r\nexport default App;\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n  <App />\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}